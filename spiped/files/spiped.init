#!/bin/sh /etc/rc.common

START=99

USE_PROCD=1

. /lib/functions.sh

NAME=spiped

BIN=/usr/sbin/spiped
PIDLOC=/var/run/spiped
CFGFILE=/etc/config/spiped
HOSTIP=$(/bin/ipcalc.sh $(uci get network.lan.ipaddr)/24 | grep "IP" | sed 's:.*=::')

USER=spiped

boot()
{
    rc_procd start_service
}

start_service() {

	config_load "${NAME}"
	config_foreach spiped_instance

}

spiped_instance() {

	config_get KEYFILE "$1" key_file
	config_get SIP "$1" source_ip
	config_get SP "$1" source_port
	config_get TIP "$1" target_ip
	config_get TP "$1" target_port
	config_get ENABLED "$1" enabled
	config_get MODE "$1" mode

	[ "$ENABLED" -eq '1' ] && {

		mkdir -p $PIDLOC
		chown $NAME:$NAME $PIDLOC

		# Generate key if none present and server instance enabled -- keyfile thus can be unique per spiped instance (client should use server's key)
		([ ! -s $KEYFILE ] && [ "$MODE" == "server" ]) && keygen
		([ ! -s $KEYFILE ] && [ "$MODE" == "client" ]) && {
			logger -t $NAME "Aborting spiped instance: $MODE S-$SIP:$SP T-$TIP:$TP $KEYFILE : no keyfile"
			return 0
		}

		# set switch for encrypt if client or decrypt if server
		[ "$MODE" = "server" ] && MODEFLAG="-d"
		[ "$MODE" = "client" ] && MODEFLAG="-e"

		PIDFILE=$PIDLOC/$NAME-[$SIP]:$SP.pid

		SERVICE_STRING="${BIN} ${MODEFLAG} -g -F -s [${SIP}]:${SP} -t [${TIP}]:${TP} -k ${KEYFILE} -p ${PIDFILE}"

		procd_open_instance "[${SIP}]:${SP}-[${TIP}]:${TP}"	# name instance source/target ip/port
		procd_set_param command ${SERVICE_STRING}

		procd_set_param file "$CFGFILE"
		procd_set_param file "$KEYFILE"
		procd_set_param stdout 1
		procd_set_param stderr 1
		procd_set_param pidfile "$PIDFILE"

		[ $SP -lt 1024 ] && [ $SIP == "0.0.0.0" -o $SIP == "127.0.0.1" -o $SIP == $HOSTIP ] && USER=root
		[ $TP -lt 1024 ] && [ $TIP == "0.0.0.0" -o $TIP == "127.0.0.1" -o $TIP == $HOSTIP ] && USER=root

		[ $USER == "root" ] && {
		  logger -t $NAME "Warning: ${MODE} [${SIP}]:${SP} running as root!"
		} || {
		  chown spiped $KEYFILE
		  chown spiped $PIDLOC
		}

		procd_set_param user $USER

		procd_add_jail spiped ubus log
		procd_add_jail_mount $KEYFILE /lib/ld-musl-arm.so.1 /lib/libc.so /usr/lib/libcrypto.so* /lib/libgcc_s.so*
		procd_add_jail_mount_rw $PIDLOC/ /dev/null

		procd_close_instance

		logger -t $NAME "Starting spiped instance: $MODE S-$SIP:$SP T-$TIP:$TP $KEYFILE running as $USER"
	}

}

stop_service() {

	config_load "${NAME}"
	config_foreach remove_pidfile

}

remove_pidfile() {

	config_get SIP "$1" source_ip
	config_get SP "$1" source_port
	config_get ENABLED "$1" enabled

	PIDFILE=$PIDLOC/$NAME-[$SIP]:$SP.pid

	[ "$ENABLED" -eq '1' ] && {
		[ -e $PIDFILE ] && {
			kill -9 $( cat $PIDFILE )
			rm -f $PIDFILE
		}
	}
}

keygen() {

	logger -t $NAME "No key exists - generating with /dev/urandom"
	dd if=/dev/urandom bs=32 count=1 of=$KEYFILE
	chown $NAME:$NAME $KEYFILE
	chmod 600 $KEYFILE

}

